{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","components/DashboardNavbar.js","components/NavItem.js","helpers/AuthContext.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainNavbar.js","components/MainLayout.js","components/account/AccountProfile.js","components/account/AccountProfileDetails.js","pages/Account.js","utils/getInitials.js","components/customer/CustomerListResults.js","components/customer/CustomerListToolbar.js","__mocks__/customers.js","pages/CustomerList.js","components/dashboard/Budget.js","components/dashboard/LatestOrders.js","components/dashboard/LatestProducts.js","components/dashboard/Sales.js","components/dashboard/TasksProgress.js","components/dashboard/TotalCustomers.js","components/dashboard/TotalProfit.js","components/dashboard/TrafficByDevice.js","pages/Dashboard.js","icons/Facebook.js","icons/Google.js","pages/Login.js","pages/NotFound.js","components/product/ProductListToolbar.js","components/product/ProductCard.js","__mocks__/products.js","pages/ProductList.js","pages/Register.js","components/settings/SettingsNotifications.js","components/settings/SettingsPassword.js","pages/Settings.js","components/admin/tutors/AdminTutorToolbar.js","components/admin/tutors/TutorsList.js","pages/adminPages/TutorsPage.js","pages/adminPages/AddTutorPage.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","AppBar","elevation","Toolbar","to","Box","sx","flexGrow","Hidden","lgDown","IconButton","color","Badge","badgeContent","length","variant","lgUp","onClick","NavItem","href","Icon","icon","title","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","Button","component","RouterLink","justifyContent","textTransform","mr","size","AuthContext","createContext","user","DashboardSidebar","onMobileClose","openMobile","Navigate","useNavigate","useContext","authState","setAuthState","useEffect","items","BarChartIcon","role","UsersIcon","ShoppingBagIcon","UserIcon","SettingsIcon","status","LockIcon","UserPlusIcon","AlertCircleIcon","content","flexDirection","alignItems","p","Avatar","cursor","Typography","Divider","List","map","item","m","align","gutterBottom","pt","localStorage","removeItem","email","uid","Drawer","anchor","onClose","open","PaperProps","defaultProps","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainNavbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","AccountProfile","profile","createdAt","Date","parse","replace","Card","CardContent","firstname","lastname","mobile_no","studAddress","age","gender","CardActions","fullWidth","genders","value","label","AccountProfileDetails","setProfile","state","message","updateResult","setUpdateResult","initialValues","emergency_contact","username","validationSchema","Yup","shape","max","required","onSubmit","values","setSubmitting","Number","axios","put","headers","accessToken","getItem","then","response","data","console","log","result","catch","error","onUpdateProfile","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","CardHeader","subheader","Grid","container","spacing","md","xs","TextField","helperText","inputProps","maxLength","name","onBlur","onChange","select","SelectProps","native","option","type","Alert","severity","disabled","animationDuration","position","circle","strokeLinecap","Account","classes","get","Helmet","minHeight","Container","maxWidth","lg","style","CircularProgress","disableShrink","className","thickness","split","slice","v","toUpperCase","join","CustomerListResults","customers","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","event","newSelectedCustomerIds","target","customer","id","TableBody","hover","selected","selectedIndex","concat","handleSelectOne","avatarUrl","getInitials","address","city","country","phone","moment","format","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","rowsPerPage","rowsPerPageOptions","CustomerListToolbar","mx","mt","InputProps","startAdornment","InputAdornment","SvgIcon","placeholder","uuid","street","CustomerList","Budget","red","orders","ref","amount","LatestOrders","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","order","Chip","endIcon","products","imageUrl","updatedAt","subtract","LatestProducts","subtitle","product","divider","ListItemAvatar","ListItemText","fromNow","edge","Sales","useTheme","datasets","indigo","grey","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","TasksProgress","orange","LinearProgress","TotalCustomers","green","TotalProfit","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","Dashboard","sm","xl","Facebook","d","Google","Login","navigate","signinError","setSigninError","setRole","onSelectRole","password","roleVar","post","setItem","token","onClickSignin","mb","startIcon","pb","FormControl","RadioGroup","aria-label","row","FormControlLabel","control","Radio","Link","NotFound","marginTop","ProductListToolbar","ProductCard","media","description","pl","totalDownloads","ProductList","Pagination","Register","signupError","setSignupError","firstName","lastName","policy","oneOf","onClickSignup","ml","underline","FormHelperText","SettingsNotifications","wrap","defaultChecked","SettingsPassword","confirm","setValues","SettingsView","AdminTutorToolbar","TutorsList","PrivateElement","element","requiredRoles","includes","from","PublicElement","routes","children","Settings","App","routing","useRoutes","ThemeProvider","Provider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.644b5b5b.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","/* eslint-disable no-underscore-dangle */\nimport { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white\n    },\n    primary: {\n      contrastText: '#ffffff',\n      main: '#5664d2'\n    },\n    text: {\n      primary: '#172b4d',\n      secondary: '#6b778c'\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","const Logo = (props) => (\n  <img\n    alt=\"Logo\"\n    src=\"/static/logo.svg\"\n    {...props}\n  />\n);\n\nexport default Logo;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from './Logo';\n\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        <Box sx={{ flexGrow: 1 }} />\n        <Hidden lgDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton color=\"inherit\">\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nDashboardNavbar.propTypes = {\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default DashboardNavbar;\n","import {\n  NavLink as RouterLink,\n  matchPath,\n  useLocation\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem } from '@material-ui/core';\n\nconst NavItem = ({\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const location = useLocation();\n\n  const active = href ? !!matchPath({\n    path: href,\n    end: false\n  }, location.pathname) : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main'\n          }),\n          '& svg': {\n            mr: 1\n          }\n        }}\n        to={href}\n      >\n        {Icon && (\n          <Icon size=\"20\" />\n        )}\n        <span>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import { createContext } from \"react\";\r\nexport const AuthContext = createContext(\"\");","import { useEffect, useContext } from \"react\";\nimport { Link as RouterLink, useLocation, useNavigate } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n    Avatar,\n    Box,\n    Button,\n    Divider,\n    Drawer,\n    Hidden,\n    List,\n    Typography,\n    Link,\n} from \"@material-ui/core\";\nimport {\n    AlertCircle as AlertCircleIcon,\n    BarChart as BarChartIcon,\n    Lock as LockIcon,\n    Settings as SettingsIcon,\n    ShoppingBag as ShoppingBagIcon,\n    User as UserIcon,\n    UserPlus as UserPlusIcon,\n    Users as UsersIcon,\n} from \"react-feather\";\nimport NavItem from \"./NavItem\";\nimport { AuthContext } from \"src/helpers/AuthContext\";\n\nconst user = {\n    avatar: \"/static/images/avatars/avatar_6.png\",\n    jobTitle: \"Senior Developer\",\n    name: \"Katarina Smith\",\n};\n\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\n    const location = useLocation();\n    const Navigate = useNavigate();\n    const { authState, setAuthState } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (openMobile && onMobileClose) {\n            onMobileClose();\n        }\n    }, [location.pathname]);\n\n    const items = [\n        {\n            href: \"/app/dashboard\",\n            icon: BarChartIcon,\n            title: \"Dashboard\",\n        },\n        ...(authState.role === \"admin\"\n            ? [\n                  {\n                      href: \"/app/customers\",\n                      icon: UsersIcon,\n                      title: \"Customers\",\n                  },\n                  {\n                      href: \"/app/admin_tutors\",\n                      icon: UsersIcon,\n                      title: \"Tutors\",\n                  },\n              ]\n            : []),\n        {\n            href: \"/app/products\",\n            icon: ShoppingBagIcon,\n            title: \"Products\",\n        },\n        ...(authState.role === \"student\" || authState.role === \"tutor\"\n            ? [\n                  {\n                      href: \"/app/account\",\n                      icon: UserIcon,\n                      title: \"Account\",\n                  },\n              ]\n            : []),\n        {\n            href: \"/app/settings\",\n            icon: SettingsIcon,\n            title: \"Settings\",\n        },\n        ...(!authState.status\n            ? [\n                  {\n                      href: \"/login\",\n                      icon: LockIcon,\n                      title: \"Login\",\n                  },\n                  {\n                      href: \"/register\",\n                      icon: UserPlusIcon,\n                      title: \"Register\",\n                  },\n              ]\n            : []),\n        {\n            href: \"/404\",\n            icon: AlertCircleIcon,\n            title: \"Error\",\n        },\n    ];\n\n    const logout = () => {\n        localStorage.removeItem(\"accessToken\");\n        setAuthState({\n            role: null,\n            email: \"\",\n            uid: 0,\n            status: false,\n        });\n    };\n\n    const content = (\n        <Box\n            sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                height: \"100%\",\n            }}\n        >\n            <Box\n                sx={{\n                    alignItems: \"center\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    p: 2,\n                }}\n            >\n                <Avatar\n                    component={RouterLink}\n                    src={user.avatar}\n                    sx={{\n                        cursor: \"pointer\",\n                        width: 64,\n                        height: 64,\n                    }}\n                    to=\"/app/account\"\n                />\n                <Typography color=\"textPrimary\" variant=\"h5\">\n                    {user.name}\n                </Typography>\n                <Typography color=\"textSecondary\" variant=\"body2\">\n                    {user.jobTitle}\n                </Typography>\n            </Box>\n            <Divider />\n            <Box sx={{ p: 2 }}>\n                <List>\n                    {items.map((item) => (\n                        <NavItem\n                            href={item.href}\n                            key={item.title}\n                            title={item.title}\n                            icon={item.icon}\n                        />\n                    ))}\n                </List>\n            </Box>\n            <Box sx={{ flexGrow: 1 }} />\n            <Box\n                sx={{\n                    backgroundColor: \"background.default\",\n                    m: 2,\n                    p: 2,\n                }}\n            >\n                <Typography align=\"center\" gutterBottom variant=\"h4\">\n                    Need more?\n                </Typography>\n                <Typography align=\"center\" variant=\"body2\">\n                    Upgrade to PRO version and access 20 more screens\n                </Typography>\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        pt: 2,\n                    }}\n                >\n                    {authState.status ? (\n                        <Button\n                            color=\"primary\"\n                            component=\"a\"\n                            onClick={logout}\n                            variant=\"contained\"\n                        >\n                            Sign Out\n                        </Button>\n                    ) : (\n                        <Button\n                            color=\"primary\"\n                            component=\"a\"\n                            onClick={() => Navigate(\"/login\")}\n                            variant=\"contained\"\n                        >\n                            Login\n                        </Button>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    );\n\n    return (\n        <>\n            <Hidden lgUp>\n                <Drawer\n                    anchor=\"left\"\n                    onClose={onMobileClose}\n                    open={openMobile}\n                    variant=\"temporary\"\n                    PaperProps={{\n                        sx: {\n                            width: 256,\n                        },\n                    }}\n                >\n                    {content}\n                </Drawer>\n            </Hidden>\n            <Hidden lgDown>\n                <Drawer\n                    anchor=\"left\"\n                    open\n                    variant=\"persistent\"\n                    PaperProps={{\n                        sx: {\n                            width: 256,\n                            top: 64,\n                            height: \"calc(100% - 64px)\",\n                        },\n                    }}\n                >\n                    {content}\n                </Drawer>\n            </Hidden>\n        </>\n    );\n};\n\nDashboardSidebar.propTypes = {\n    onMobileClose: PropTypes.func,\n    openMobile: PropTypes.bool,\n};\n\nDashboardSidebar.defaultProps = {\n    onMobileClose: () => {},\n    openMobile: false,\n};\n\nexport default DashboardSidebar;\n","import { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\n\nconst DashboardLayoutRoot = experimentalStyled('div')(\n  ({ theme }) => ({\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  })\n);\n\nconst DashboardLayoutWrapper = experimentalStyled('div')(\n  ({ theme }) => ({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  })\n);\n\nconst DashboardLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst DashboardLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst DashboardLayout = () => {\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <DashboardLayoutRoot>\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <DashboardSidebar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <DashboardLayoutWrapper>\n        <DashboardLayoutContainer>\n          <DashboardLayoutContent>\n            <Outlet />\n          </DashboardLayoutContent>\n        </DashboardLayoutContainer>\n      </DashboardLayoutWrapper>\n    </DashboardLayoutRoot>\n  );\n};\n\nexport default DashboardLayout;\n","import { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport Logo from './Logo';\n\nconst MainNavbar = (props) => (\n  <AppBar\n    elevation={0}\n    {...props}\n  >\n    <Toolbar sx={{ height: 64 }}>\n      <RouterLink to=\"/\">\n        <Logo />\n      </RouterLink>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default MainNavbar;\n","import { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport MainNavbar from './MainNavbar';\n\nconst MainLayoutRoot = experimentalStyled('div')(\n  ({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  })\n);\n\nconst MainLayoutWrapper = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64\n});\n\nconst MainLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst MainLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst MainLayout = () => (\n  <MainLayoutRoot>\n    <MainNavbar />\n    <MainLayoutWrapper>\n      <MainLayoutContainer>\n        <MainLayoutContent>\n          <Outlet />\n        </MainLayoutContent>\n      </MainLayoutContainer>\n    </MainLayoutWrapper>\n  </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","import moment from \"moment\";\nimport {\n    Avatar,\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Divider,\n    Typography,\n} from \"@material-ui/core\";\n\nconst user = {\n    avatar: \"/static/images/avatars/avatar_6.png\",\n    city: \"Los Angeles\",\n    country: \"USA\",\n    jobTitle: \"Senior Developer\",\n    name: \"Katarina Smith\",\n    timezone: \"GTM-7\",\n};\n\nconst AccountProfile = ({ profile }) => {\n    var createdAtVar = profile.createdAt\n        ? new Date(Date.parse(profile.createdAt.replace(/[-]/g, \"/\")))\n        : null;    \n    return (\n        <Card>\n            <CardContent>\n                <Box\n                    sx={{\n                        alignItems: \"center\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                    }}\n                >\n                    <Avatar\n                        src={user.avatar}\n                        sx={{\n                            height: 100,\n                            width: 100,\n                        }}\n                    />\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n                        {`${profile.firstname} ${profile.lastname}`}\n                    </Typography>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                        {`${profile.mobile_no} | ${profile.email}`}\n                    </Typography>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                        {`${profile.studAddress}${\n                            profile.age && ` | ${profile.age} years old`\n                        }${profile.gender && ` | ${profile.gender}`}`}\n                    </Typography>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                        {`Created At ${\n                            profile.createdAt && profile.createdAt\n                        } `}\n                    </Typography>\n                </Box>\n            </CardContent>\n            <Divider />\n            <CardActions>\n                <Button color=\"primary\" fullWidth variant=\"text\">\n                    Upload picture\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default AccountProfile;\n","import { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport axios from \"axios\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Grid,\n    TextField,\n    Alert,\n} from \"@material-ui/core\";\n\nconst genders = [\n    {\n        value: \"male\",\n        label: \"Male\",\n    },\n    {\n        value: \"female\",\n        label: \"Female\",\n    },\n    {\n        value: \"none\",\n        label: \"None\",\n    },\n];\n\nconst AccountProfileDetails = ({ profile, setProfile, role }) => {\n    const [updateResult, setUpdateResult] = useState({\n        state: \"success\",\n        message: \"\",\n    });\n\n    const initialValues = {\n        firstname: profile && profile.firstname ? profile.firstname : \"\",\n        lastname: profile && profile.lastname ? profile.lastname : \"\",\n        gender: profile && profile.gender ? profile.gender : \"\",\n        age: profile && profile.age ? profile.age : \"\",\n        studAddress: profile && profile.studAddress ? profile.studAddress : \"\",\n        mobile_no: profile && profile.mobile_no ? profile.mobile_no : \"\",\n        emergency_contact:\n            profile && profile.emergency_contact\n                ? profile.emergency_contact\n                : \"\",\n        username: profile && profile.username ? profile.username : \"\",\n    };\n\n    const validationSchema = Yup.object().shape({\n        firstname: Yup.string().max(25).required(\"First name is required\"),\n        lastname: Yup.string().max(25).required(\"Last name is required\"),\n        gender: Yup.string().max(6),\n        age: Yup.number().max(150),\n        studAddress: Yup.string().max(50),\n        mobile_no: Yup.string().max(15),\n        emergency_contact: Yup.string().max(15),\n        username: Yup.string().max(25),\n    });\n\n    const onUpdateProfile = (values, setSubmitting) => {\n        const profile = {\n            firstname: values.firstname,\n            lastname: values.lastname,\n            ...(values.gender &&\n                values.gender !== \"\" && { gender: values.gender }),\n            ...(values.age && values.age !== \"\" && { age: Number(values.age) }),\n            ...(values.studAddress &&\n                values.studAddress !== \"\" && {\n                    studAddress: values.studAddress,\n                }),\n            ...(values.mobile_no &&\n                values.mobile_no !== \"\" && { mobile_no: values.mobile_no }),\n            ...(values.emergency_contact &&\n                values.emergency_contact !== \"\" && {\n                    emergency_contact: values.emergency_contact,\n                }),\n            ...(values.username &&\n                values.username !== \"\" && { username: values.username }),\n        };\n        //console.log(\"profile\", profile);\n\n        setUpdateResult({ state: \"success\", message: \"\" });\n        setSubmitting(true);\n        axios\n            .put(\n                role === \"student\"\n                    ? \"http://localhost:3001/student/update\"\n                    : \"http://localhost:3001/tutor/update\",\n                profile,\n                {\n                    headers: {\n                        accessToken: localStorage.getItem(\"accessToken\"),\n                    },\n                }\n            )\n            .then((response) => {\n                setSubmitting(false);\n                if (response.data.state === \"success\") {\n                    setProfile({\n                        state: \"success\",\n                        message: \"Profile read succefully\",\n                        data: response.data.data,\n                    });\n                    setUpdateResult({\n                        state: \"success\",\n                        message: response.data.message,\n                    });\n                    console.log({ state: \"success\", result: response });\n                    //navigate(\"/app/dashboard\", { replace: true });\n                } else {\n                    setUpdateResult({\n                        state: \"error\",\n                        message: response.data.message,\n                    });\n                    console.log({ state: \"error\", result: response });\n                }\n            })\n            .catch((error) => {\n                setSubmitting(false);\n                setUpdateResult({\n                    state: \"error\",\n                    message: error.message,\n                });\n                console.log({ state: \"error\", result: error });\n            });\n    };\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={(values, { setSubmitting }) => {\n                onUpdateProfile(values, setSubmitting);\n            }}\n        >\n            {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values,\n            }) => (\n                <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                    <Card>\n                        <CardHeader\n                            subheader=\"Edit your profile.\"\n                            title=\"Profile\"\n                        />\n                        <Divider />\n                        <CardContent>\n                            <Grid container spacing={3}>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        error={Boolean(\n                                            touched.firstname &&\n                                                errors.firstname\n                                        )}\n                                        fullWidth\n                                        helperText={\n                                            touched.firstname &&\n                                            errors.firstname\n                                        }\n                                        inputProps={{ maxLength: 25 }}\n                                        label=\"First name\"\n                                        margin=\"normal\"\n                                        name=\"firstname\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.firstname}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        error={Boolean(\n                                            touched.lastname && errors.lastname\n                                        )}\n                                        fullWidth\n                                        helperText={\n                                            touched.lastname && errors.lastname\n                                        }\n                                        inputProps={{ maxLength: 25 }}\n                                        label=\"Last name\"\n                                        margin=\"normal\"\n                                        name=\"lastname\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.lastname}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        error={Boolean(\n                                            touched.mobile_no &&\n                                                errors.mobile_no\n                                        )}\n                                        fullWidth\n                                        helperText={\n                                            touched.mobile_no &&\n                                            errors.mobile_no\n                                        }\n                                        inputProps={{ maxLength: 15 }}\n                                        label=\"Phone Number\"\n                                        margin=\"normal\"\n                                        name=\"mobile_no\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.mobile_no}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        error={Boolean(\n                                            touched.studAddress &&\n                                                errors.studAddress\n                                        )}\n                                        fullWidth\n                                        helperText={\n                                            touched.studAddress &&\n                                            errors.studAddress\n                                        }\n                                        inputProps={{ maxLength: 50 }}\n                                        label=\"Address\"\n                                        margin=\"normal\"\n                                        name=\"studAddress\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.studAddress}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        error={Boolean(\n                                            touched.gender && errors.gender\n                                        )}\n                                        fullWidth\n                                        helperText={\n                                            touched.gender && errors.gender\n                                        }\n                                        inputProps={{ maxLength: 6 }}\n                                        select\n                                        SelectProps={{ native: true }}\n                                        label=\"Gender\"\n                                        margin=\"normal\"\n                                        name=\"gender\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.gender}\n                                        variant=\"outlined\"\n                                    >\n                                        {genders.map((option) => (\n                                            <option\n                                                key={option.value}\n                                                value={option.value}\n                                            >\n                                                {option.label}\n                                            </option>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        error={Boolean(\n                                            touched.age && errors.age\n                                        )}\n                                        fullWidth\n                                        helperText={touched.age && errors.age}\n                                        inputProps={{ maxLength: 3 }}\n                                        type=\"number\"\n                                        label=\"Age\"\n                                        margin=\"normal\"\n                                        name=\"age\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.age}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        error={Boolean(\n                                            touched.emergency_contact &&\n                                                errors.emergency_contact\n                                        )}\n                                        fullWidth\n                                        helperText={\n                                            touched.emergency_contact &&\n                                            errors.emergency_contact\n                                        }\n                                        inputProps={{ maxLength: 15 }}\n                                        label=\"Emergency contact\"\n                                        margin=\"normal\"\n                                        name=\"emergency_contact\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.emergency_contact}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        error={Boolean(\n                                            touched.username && errors.username\n                                        )}\n                                        fullWidth\n                                        helperText={\n                                            touched.username && errors.username\n                                        }\n                                        inputProps={{ maxLength: 25 }}\n                                        label=\"User name\"\n                                        margin=\"normal\"\n                                        name=\"username\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.username}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                        {updateResult &&\n                            updateResult.message &&\n                            updateResult.message !== \"\" && (\n                                <Alert\n                                    severity={updateResult.state}\n                                    variant=\"outlined\"\n                                >\n                                    {updateResult.message}\n                                </Alert>\n                            )}\n                        <Divider />\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                                p: 2,\n                            }}\n                        >\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                disabled={isSubmitting}\n                                type=\"submit\"\n                            >\n                                Save details\n                            </Button>\n                        </Box>\n                    </Card>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nexport default AccountProfileDetails;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Box,\n    Container,\n    Grid,\n    CircularProgress,\n    Alert,\n} from \"@material-ui/core\";\nimport AccountProfile from \"src/components/account/AccountProfile\";\nimport AccountProfileDetails from \"src/components/account/AccountProfileDetails\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../helpers/AuthContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    top: {\n        color: \"#1a90ff\",\n        animationDuration: \"550ms\",\n        position: \"absolute\",\n    },\n    circle: {\n        strokeLinecap: \"round\",\n    },\n}));\n\nconst Account = () => {\n    const classes = useStyles();\n    const [profile, setProfile] = useState({\n        state: \"success\",\n        message: \"\",\n        data: null,\n    });\n    const { authState } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (authState.status && authState.uid) {\n            axios\n                .get(\n                    authState.role === \"student\"\n                        ? `http://localhost:3001/student/${authState.uid}`\n                        : `http://localhost:3001/tutor/${authState.uid}`\n                )\n                .then((response) => {\n                    if (response.data.state === \"success\") {\n                        setProfile({\n                            state: \"success\",\n                            message: response.data.message,\n                            data: response.data.data,\n                        });\n                    } else {\n                        setProfile({\n                            state: \"error\",\n                            message: response.data.message,\n                            data: null,\n                        });\n                    }\n                })\n                .catch((error) => {\n                    setProfile({\n                        state: \"error\",\n                        message: error.message,\n                        data: null,\n                    });\n                });\n        } else {\n            setProfile({\n                state: \"error\",\n                message: \"You are not signed in.\",\n                data: null,\n            });\n        }\n    }, [authState]);\n\n    return profile.data ? (\n        <>\n            <Helmet>\n                <title>Account | Material Kit</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: \"background.default\",\n                    minHeight: \"100%\",\n                    py: 3,\n                }}\n            >\n                <Container maxWidth=\"lg\">\n                    <Grid container spacing={3}>\n                        <Grid item lg={4} md={6} xs={12}>\n                            <AccountProfile profile={profile.data} />\n                        </Grid>\n                        <Grid item lg={8} md={6} xs={12}>\n                            <AccountProfileDetails\n                                profile={profile.data}\n                                setProfile={setProfile}\n                                role={authState.role}\n                            />\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n        </>\n    ) : profile.message && profile.message !== \"\" ? (\n        <div\n            style={{\n                width: \"100%\",\n                display: \"flex\",\n                height: \"100%\",\n                flexGrow: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n            }}\n        >\n            <Alert severity=\"error\" variant=\"outlined\">\n                {profile.message}\n            </Alert>\n        </div>\n    ) : (\n        <div\n            style={{\n                width: \"100%\",\n                display: \"flex\",\n                height: \"100%\",\n                flexGrow: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n            }}\n        >\n            <CircularProgress\n                variant=\"indeterminate\"\n                disableShrink\n                className={classes.top}\n                classes={{\n                    circle: classes.circle,\n                }}\n                size={40}\n                thickness={4}\n            />\n        </div>\n    );\n};\n\nexport default Account;\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst CustomerListResults = ({ customers, ...rest }) => {\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card {...rest}>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedCustomerIds.length === customers.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedCustomerIds.length > 0\n                      && selectedCustomerIds.length < customers.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  Phone\n                </TableCell>\n                <TableCell>\n                  Registration date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {customers.slice(0, limit).map((customer) => (\n                <TableRow\n                  hover\n                  key={customer.id}\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, customer.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n                      <Avatar\n                        src={customer.avatarUrl}\n                        sx={{ mr: 2 }}\n                      >\n                        {getInitials(customer.name)}\n                      </Avatar>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {customer.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {customer.email}\n                  </TableCell>\n                  <TableCell>\n                    {`${customer.address.city}, ${customer.address.state}, ${customer.address.country}`}\n                  </TableCell>\n                  <TableCell>\n                    {customer.phone}\n                  </TableCell>\n                  <TableCell>\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={customers.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nCustomerListResults.propTypes = {\n  customers: PropTypes.array.isRequired\n};\n\nexport default CustomerListResults;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst CustomerListToolbar = (props) => (\n  <Box {...props}>\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end'\n      }}\n    >\n      <Button>\n        Import\n      </Button>\n      <Button sx={{ mx: 1 }}>\n        Export\n      </Button>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n      >\n        Add customer\n      </Button>\n    </Box>\n    <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <TextField\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon\n                      fontSize=\"small\"\n                      color=\"action\"\n                    >\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                )\n              }}\n              placeholder=\"Search customer\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  </Box>\n);\n\nexport default CustomerListToolbar;\n","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_3.png',\n    createdAt: 1555016400000,\n    email: 'ekaterina.tankova@devias.io',\n    name: 'Ekaterina Tankova',\n    phone: '304-428-3097'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_4.png',\n    createdAt: 1555016400000,\n    email: 'cao.yu@devias.io',\n    name: 'Cao Yu',\n    phone: '712-351-5711'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_2.png',\n    createdAt: 1555016400000,\n    email: 'alexa.richardson@devias.io',\n    name: 'Alexa Richardson',\n    phone: '770-635-2682'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_5.png',\n    createdAt: 1554930000000,\n    email: 'anje.keizer@devias.io',\n    name: 'Anje Keizer',\n    phone: '908-691-3242'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    avatarUrl: '/static/images/avatars/avatar_6.png',\n    createdAt: 1554757200000,\n    email: 'clarke.gillebert@devias.io',\n    name: 'Clarke Gillebert',\n    phone: '972-333-4106'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_1.png',\n    createdAt: 1554670800000,\n    email: 'adam.denisov@devias.io',\n    name: 'Adam Denisov',\n    phone: '858-602-3409'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_7.png',\n    createdAt: 1554325200000,\n    email: 'ava.gregoraci@devias.io',\n    name: 'Ava Gregoraci',\n    phone: '415-907-2647'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_8.png',\n    createdAt: 1523048400000,\n    email: 'emilee.simchenko@devias.io',\n    name: 'Emilee Simchenko',\n    phone: '702-661-1654'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    avatarUrl: '/static/images/avatars/avatar_9.png',\n    createdAt: 1554702800000,\n    email: 'kwak.seong.min@devias.io',\n    name: 'Kwak Seong-Min',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_10.png',\n    createdAt: 1522702800000,\n    email: 'merrile.burgett@devias.io',\n    name: 'Merrile Burgett',\n    phone: '801-301-7894'\n  }\n];\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport CustomerListResults from 'src/components/customer/CustomerListResults';\nimport CustomerListToolbar from 'src/components/customer/CustomerListToolbar';\nimport customers from 'src/__mocks__/customers';\n\nconst CustomerList = () => (\n  <>\n    <Helmet>\n      <title>Customers | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <CustomerListToolbar />\n        <Box sx={{ pt: 3 }}>\n          <CustomerListResults customers={customers} />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default CustomerList;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport { red } from '@material-ui/core/colors';\n\nconst Budget = (props) => (\n  <Card\n    sx={{ height: '100%' }}\n    {...props}\n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            BUDGET\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            $24,000\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: red[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <MoneyIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          pt: 2,\n          display: 'flex',\n          alignItems: 'center'\n        }}\n      >\n        <ArrowDownwardIcon sx={{ color: red[900] }} />\n        <Typography\n          sx={{\n            color: red[900],\n            mr: 1\n          }}\n          variant=\"body2\"\n        >\n          12%\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          Since last month\n        </Typography>\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default Budget;\n","import moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst orders = [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n\nconst LatestOrders = (props) => (\n  <Card {...props}>\n    <CardHeader title=\"Latest Orders\" />\n    <Divider />\n    <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Order Ref\n              </TableCell>\n              <TableCell>\n                Customer\n              </TableCell>\n              <TableCell sortDirection=\"desc\">\n                <Tooltip\n                  enterDelay={300}\n                  title=\"Sort\"\n                >\n                  <TableSortLabel\n                    active\n                    direction=\"desc\"\n                  >\n                    Date\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n              <TableCell>\n                Status\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orders.map((order) => (\n              <TableRow\n                hover\n                key={order.id}\n              >\n                <TableCell>\n                  {order.ref}\n                </TableCell>\n                <TableCell>\n                  {order.customer.name}\n                </TableCell>\n                <TableCell>\n                  {moment(order.createdAt).format('DD/MM/YYYY')}\n                </TableCell>\n                <TableCell>\n                  <Chip\n                    color=\"primary\"\n                    label={order.status}\n                    size=\"small\"\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n  </Card>\n);\n\nexport default LatestOrders;\n","import { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst products = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n\nconst LatestProducts = (props) => (\n  <Card {...props}>\n    <CardHeader\n      subtitle={`${products.length} in total`}\n      title=\"Latest Products\"\n    />\n    <Divider />\n    <List>\n      {products.map((product, i) => (\n        <ListItem\n          divider={i < products.length - 1}\n          key={product.id}\n        >\n          <ListItemAvatar>\n            <img\n              alt={product.name}\n              src={product.imageUrl}\n              style={{\n                height: 48,\n                width: 48\n              }}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            primary={product.name}\n            secondary={`Updated ${product.updatedAt.fromNow()}`}\n          />\n          <IconButton\n            edge=\"end\"\n            size=\"small\"\n          >\n            <MoreVertIcon />\n          </IconButton>\n        </ListItem>\n      ))}\n    </List>\n    <Divider />\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n  </Card>\n);\n\nexport default LatestProducts;\n","import { Bar } from 'react-chartjs-2';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst Sales = (props) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.paper,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        action={(\n          <Button\n            endIcon={<ArrowDropDownIcon />}\n            size=\"small\"\n            variant=\"text\"\n          >\n            Last 7 days\n          </Button>\n        )}\n        title=\"Latest Sales\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          sx={{\n            height: 400,\n            position: 'relative'\n          }}\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nexport default Sales;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  LinearProgress,\n  Typography\n} from '@material-ui/core';\nimport { orange } from '@material-ui/core/colors';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst TasksProgress = (props) => (\n  <Card\n    sx={{ height: '100%' }}\n    {...props}\n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            TASKS PROGRESS\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            75.5%\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: orange[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <InsertChartIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box sx={{ pt: 3 }}>\n        <LinearProgress\n          value={75.5}\n          variant=\"determinate\"\n        />\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TasksProgress;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst TotalCustomers = (props) => (\n  <Card {...props}>\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            TOTAL CUSTOMERS\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            1,600\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: green[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <PeopleIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          pt: 2\n        }}\n      >\n        <ArrowUpwardIcon sx={{ color: green[900] }} />\n        <Typography\n          variant=\"body2\"\n          sx={{\n            color: green[900],\n            mr: 1\n          }}\n        >\n          16%\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          Since last month\n        </Typography>\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalCustomers;\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { indigo } from '@material-ui/core/colors';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst TotalProfit = (props) => (\n  <Card {...props}>\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            TOTAL PROFIT\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            $23,200\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: indigo[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <AttachMoneyIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalProfit;\n","import { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  useTheme\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TabletIcon from '@material-ui/icons/Tablet';\n\nconst TrafficByDevice = (props) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          colors.indigo[500],\n          colors.red[600],\n          colors.orange[600]\n        ],\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.paper,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: 63,\n      icon: LaptopMacIcon,\n      color: colors.indigo[500]\n    },\n    {\n      title: 'Tablet',\n      value: 15,\n      icon: TabletIcon,\n      color: colors.red[600]\n    },\n    {\n      title: 'Mobile',\n      value: 23,\n      icon: PhoneIcon,\n      color: colors.orange[600]\n    }\n  ];\n\n  return (\n    <Card {...props}>\n      <CardHeader title=\"Traffic by Device\" />\n      <Divider />\n      <CardContent>\n        <Box\n          sx={{\n            height: 300,\n            position: 'relative'\n          }}\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 2\n          }}\n        >\n          {devices.map(({\n            color,\n            icon: Icon,\n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              sx={{\n                p: 1,\n                textAlign: 'center'\n              }}\n            >\n              <Icon color=\"action\" />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h2\"\n              >\n                {value}\n                %\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TrafficByDevice;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport Budget from 'src/components/dashboard//Budget';\nimport LatestOrders from 'src/components/dashboard//LatestOrders';\nimport LatestProducts from 'src/components/dashboard//LatestProducts';\nimport Sales from 'src/components/dashboard//Sales';\nimport TasksProgress from 'src/components/dashboard//TasksProgress';\nimport TotalCustomers from 'src/components/dashboard//TotalCustomers';\nimport TotalProfit from 'src/components/dashboard//TotalProfit';\nimport TrafficByDevice from 'src/components/dashboard//TrafficByDevice';\n\nconst Dashboard = () => (\n  <>\n    <Helmet>\n      <title>Dashboard | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <Budget />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalCustomers />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TasksProgress />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalProfit sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <Sales />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <TrafficByDevice sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestProducts sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default Dashboard;\n","import { SvgIcon } from '@material-ui/core';\n\nconst Facebook = (props) => (\n  <SvgIcon {...props}>\n    <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\n  </SvgIcon>\n);\n\nexport default Facebook;\n","import { SvgIcon } from '@material-ui/core';\n\nconst Google = (props) => (\n  <SvgIcon {...props}>\n    <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\n  </SvgIcon>\n);\n\nexport default Google;\n","import { useState, useContext } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport axios from \"axios\";\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    Link,\n    TextField,\n    Typography,\n    Alert,\n    Radio,\n    RadioGroup,\n    FormControlLabel,\n    FormControl,\n    FormLabel,\n} from \"@material-ui/core\";\nimport FacebookIcon from \"src/icons/Facebook\";\nimport GoogleIcon from \"src/icons/Google\";\nimport { AuthContext } from \"../helpers/AuthContext\";\n\nconst Login = () => {\n    const navigate = useNavigate();\n\n    const [signinError, setSigninError] = useState(\"\");\n    const { setAuthState } = useContext(AuthContext);\n    const [role, setRole] = useState(\"student\");\n\n    const onSelectRole = (event) => {\n        setRole(event.target.value);\n    };\n\n    const getLoginUrl = (roleVar) => {\n        if (roleVar === \"student\") {\n            return \"http://localhost:3001/student/login\";\n        } else if (roleVar === \"tutor\") {\n            return \"http://localhost:3001/tutor/login\";\n        } else if (roleVar === \"admin\") {\n            return \"http://localhost:3001/student/login\";\n        } else {\n        }\n    };\n\n    const onClickSignin = (values, setSubmitting) => {\n        const data = {\n            email: values.email,\n            password: values.password,\n        };\n\n        setSigninError(\"\");\n        setSubmitting(true);\n        axios\n            .post(getLoginUrl(role), data)\n            .then((response) => {\n                setSubmitting(false);\n                if (response.data.state === \"success\") {\n                    localStorage.setItem(\n                        \"accessToken\",\n                        response.data.data.token\n                    );\n                    setAuthState({\n                        email: response.data.data.email,\n                        uid: response.data.data.uid,\n                        role: response.data.data.role,\n                        status: true,\n                    });\n                    console.log({ state: \"success\", result: response });\n                    navigate(\"/app/dashboard\", { replace: true });\n                } else {\n                    setSigninError(response.data.message);\n                    console.log({ state: \"error\", result: response });\n                }\n            })\n            .catch((error) => {\n                setSubmitting(false);\n                setSigninError(error.message);\n                console.log({ state: \"error\", result: error });\n            });\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>Login | Material Kit</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: \"background.default\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    height: \"100%\",\n                    justifyContent: \"center\",\n                }}\n            >\n                <Container maxWidth=\"sm\">\n                    <Formik\n                        initialValues={{\n                            email: \"demo@devias.io\",\n                            password: \"Password123\",\n                        }}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string()\n                                .email(\"Must be a valid email\")\n                                .max(255)\n                                .required(\"Email is required\"),\n                            password: Yup.string()\n                                .max(255)\n                                .required(\"Password is required\"),\n                        })}\n                        onSubmit={(values, { setSubmitting }) => {\n                            onClickSignin(values, setSubmitting);\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box sx={{ mb: 3 }}>\n                                    <Typography\n                                        color=\"textPrimary\"\n                                        variant=\"h2\"\n                                    >\n                                        Sign in\n                                    </Typography>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                        variant=\"body2\"\n                                    >\n                                        Sign in on the internal platform\n                                    </Typography>\n                                </Box>\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} md={6}>\n                                        <Button\n                                            color=\"primary\"\n                                            fullWidth\n                                            startIcon={<FacebookIcon />}\n                                            onClick={handleSubmit}\n                                            size=\"large\"\n                                            variant=\"contained\"\n                                        >\n                                            Login with Facebook\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button\n                                            fullWidth\n                                            startIcon={<GoogleIcon />}\n                                            onClick={handleSubmit}\n                                            size=\"large\"\n                                            variant=\"contained\"\n                                        >\n                                            Login with Google\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                                <Box\n                                    sx={{\n                                        pb: 1,\n                                        pt: 3,\n                                    }}\n                                >\n                                    <Typography\n                                        align=\"center\"\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                    >\n                                        or login with email address\n                                    </Typography>\n                                </Box>\n                                <Box\n                                    sx={{\n                                        pb: 1,\n                                        pt: 1,\n                                    }}\n                                >\n                                    <FormControl\n                                        component=\"fieldset\"\n                                        margin=\"dense\"\n                                    >\n                                        <RadioGroup\n                                            aria-label=\"gender\"\n                                            name=\"gender1\"\n                                            value={role}\n                                            onChange={onSelectRole}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value=\"student\"\n                                                control={<Radio />}\n                                                label=\"Login as student\"\n                                            />\n                                            <FormControlLabel\n                                                value=\"tutor\"\n                                                control={<Radio />}\n                                                label=\"Login as tutor\"\n                                            />\n                                            <FormControlLabel\n                                                value=\"admin\"\n                                                control={<Radio />}\n                                                label=\"Login as admin\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </Box>\n                                <TextField\n                                    error={Boolean(\n                                        touched.email && errors.email\n                                    )}\n                                    fullWidth\n                                    helperText={touched.email && errors.email}\n                                    label=\"Email Address\"\n                                    margin=\"normal\"\n                                    name=\"email\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    value={values.email}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(\n                                        touched.password && errors.password\n                                    )}\n                                    fullWidth\n                                    helperText={\n                                        touched.password && errors.password\n                                    }\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    name=\"password\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                    value={values.password}\n                                    variant=\"outlined\"\n                                />\n                                {signinError && signinError !== \"\" && (\n                                    <Alert severity=\"error\" variant=\"outlined\">\n                                        {signinError}\n                                    </Alert>\n                                )}\n                                <Box sx={{ py: 2 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                    >\n                                        Sign in now\n                                    </Button>\n                                </Box>\n                                {role === \"student\" && (\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                    >\n                                        Don&apos;t have an account?{\" \"}\n                                        <Link\n                                            component={RouterLink}\n                                            to=\"/register\"\n                                            variant=\"h6\"\n                                        >\n                                            Sign up\n                                        </Link>\n                                    </Typography>\n                                )}\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default Login;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Typography\n} from '@material-ui/core';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404 | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"h1\"\n        >\n          404: The page you are looking for isn’t here\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          You either tried some shady route or you came here by mistake.\n          Whichever it is, try using the navigation\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              maxWidth: '100%',\n              width: 560\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst ProductListToolbar = (props) => (\n  <Box {...props}>\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end'\n      }}\n    >\n      <Button>\n        Import\n      </Button>\n      <Button sx={{ mx: 1 }}>\n        Export\n      </Button>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n      >\n        Add product\n      </Button>\n    </Box>\n    <Box sx={{ mt: 3 }}>\n      <Card>\n        <CardContent>\n          <Box sx={{ maxWidth: 500 }}>\n            <TextField\n              fullWidth\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon\n                      fontSize=\"small\"\n                      color=\"action\"\n                    >\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                )\n              }}\n              placeholder=\"Search product\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  </Box>\n);\n\nexport default ProductListToolbar;\n","import PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst ProductCard = ({ product, ...rest }) => (\n  <Card\n    sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%'\n    }}\n    {...rest}\n  >\n    <CardContent>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          pb: 3\n        }}\n      >\n        <Avatar\n          alt=\"Product\"\n          src={product.media}\n          variant=\"square\"\n        />\n      </Box>\n      <Typography\n        align=\"center\"\n        color=\"textPrimary\"\n        gutterBottom\n        variant=\"h4\"\n      >\n        {product.title}\n      </Typography>\n      <Typography\n        align=\"center\"\n        color=\"textPrimary\"\n        variant=\"body1\"\n      >\n        {product.description}\n      </Typography>\n    </CardContent>\n    <Box sx={{ flexGrow: 1 }} />\n    <Divider />\n    <Box sx={{ p: 2 }}>\n      <Grid\n        container\n        spacing={2}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid\n          item\n          sx={{\n            alignItems: 'center',\n            display: 'flex'\n          }}\n        >\n          <AccessTimeIcon color=\"action\" />\n          <Typography\n            color=\"textSecondary\"\n            display=\"inline\"\n            sx={{ pl: 1 }}\n            variant=\"body2\"\n          >\n            Updated 2hr ago\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          sx={{\n            alignItems: 'center',\n            display: 'flex'\n          }}\n        >\n          <GetAppIcon color=\"action\" />\n          <Typography\n            color=\"textSecondary\"\n            display=\"inline\"\n            sx={{ pl: 1 }}\n            variant=\"body2\"\n          >\n            {product.totalDownloads}\n            {' '}\n            Downloads\n          </Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  </Card>\n);\n\nProductCard.propTypes = {\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    createdAt: '27/03/2019',\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\n    media: '/static/images/products/product_1.png',\n    title: 'Dropbox',\n    totalDownloads: '594'\n  },\n  {\n    id: uuid(),\n    createdAt: '31/03/2019',\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\n    media: '/static/images/products/product_2.png',\n    title: 'Medium Corporation',\n    totalDownloads: '625'\n  },\n  {\n    id: uuid(),\n    createdAt: '03/04/2019',\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\n    media: '/static/images/products/product_3.png',\n    title: 'Slack',\n    totalDownloads: '857'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\n    media: '/static/images/products/product_4.png',\n    title: 'Lyft',\n    totalDownloads: '406'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\n    media: '/static/images/products/product_5.png',\n    title: 'GitHub',\n    totalDownloads: '835'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\n    media: '/static/images/products/product_6.png',\n    title: 'Squarespace',\n    totalDownloads: '835'\n  }\n];\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid,\n  Pagination\n} from '@material-ui/core';\nimport ProductListToolbar from 'src/components/product/ProductListToolbar';\nimport ProductCard from 'src/components/product//ProductCard';\nimport products from 'src/__mocks__/products';\n\nconst ProductList = () => (\n  <>\n    <Helmet>\n      <title>Products | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <ProductListToolbar />\n        <Box sx={{ pt: 3 }}>\n          <Grid\n            container\n            spacing={3}\n          >\n            {products.map((product) => (\n              <Grid\n                item\n                key={product.id}\n                lg={4}\n                md={6}\n                xs={12}\n              >\n                <ProductCard product={product} />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 3\n          }}\n        >\n          <Pagination\n            color=\"primary\"\n            count={3}\n            size=\"small\"\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default ProductList;\n","import { useState, useContext } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport axios from \"axios\";\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Container,\n    FormHelperText,\n    Link,\n    TextField,\n    Typography,\n    Alert,\n} from \"@material-ui/core\";\nimport { AuthContext } from \"../helpers/AuthContext\";\n\nconst Register = () => {\n    const navigate = useNavigate();\n    const [signupError, setSignupError] = useState(\"\");\n    const { setAuthState } = useContext(AuthContext);\n\n    const onClickSignup = (values, setSubmitting) => {\n        const data = {\n            firstname: values.firstName,\n            lastname: values.lastName,\n            email: values.email,\n            password: values.password,\n        };\n\n        setSignupError(\"\");\n        setSubmitting(true);\n        axios\n            .post(\"http://localhost:3001/student/create\", data)\n            .then((response) => {\n                setSubmitting(false);\n                if (response.data.state === \"success\") {\n                    localStorage.setItem(\n                        \"accessToken\",\n                        response.data.data.token\n                    );\n                    setAuthState({\n                        email: response.data.data.email,\n                        uid: response.data.data.uid,\n                        role: response.data.data.role,\n                        status: true,\n                    });\n                    console.log({ state: \"success\", result: response });\n                    navigate(\"/app/dashboard\", { replace: true });\n                } else {\n                    setSignupError(response.data.message);\n                    console.log({ state: \"error\", result: response });\n                }\n            })\n            .catch((error) => {\n                setSubmitting(false);\n                setSignupError(error.message);\n                console.log({ state: \"error\", result: error });\n            });\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>Register | Material Kit</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: \"background.default\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    height: \"100%\",\n                    justifyContent: \"center\",\n                }}\n            >\n                <Container maxWidth=\"sm\">\n                    <Formik\n                        initialValues={{\n                            email: \"\",\n                            firstName: \"\",\n                            lastName: \"\",\n                            password: \"\",\n                            policy: false,\n                        }}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string()\n                                .email(\"Must be a valid email\")\n                                .max(50)\n                                .required(\"Email is required\"),\n                            firstName: Yup.string()\n                                .max(25)\n                                .required(\"First name is required\"),\n                            lastName: Yup.string()\n                                .max(25)\n                                .required(\"Last name is required\"),\n                            password: Yup.string()\n                                .max(32)\n                                .required(\"password is required\"),\n                            policy: Yup.boolean().oneOf(\n                                [true],\n                                \"This field must be checked\"\n                            ),\n                        })}\n                        onSubmit={(values, { setSubmitting }) => {\n                            onClickSignup(values, setSubmitting);\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box sx={{ mb: 3 }}>\n                                    <Typography\n                                        color=\"textPrimary\"\n                                        variant=\"h2\"\n                                    >\n                                        Create new account\n                                    </Typography>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                        variant=\"body2\"\n                                    >\n                                        Use your email to create new account\n                                    </Typography>\n                                </Box>\n                                <TextField\n                                    error={Boolean(\n                                        touched.firstName && errors.firstName\n                                    )}\n                                    fullWidth\n                                    helperText={\n                                        touched.firstName && errors.firstName\n                                    }\n                                    label=\"First name\"\n                                    margin=\"normal\"\n                                    name=\"firstName\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.firstName}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(\n                                        touched.lastName && errors.lastName\n                                    )}\n                                    fullWidth\n                                    helperText={\n                                        touched.lastName && errors.lastName\n                                    }\n                                    label=\"Last name\"\n                                    margin=\"normal\"\n                                    name=\"lastName\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.lastName}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(\n                                        touched.email && errors.email\n                                    )}\n                                    fullWidth\n                                    helperText={touched.email && errors.email}\n                                    label=\"Email Address\"\n                                    margin=\"normal\"\n                                    name=\"email\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    value={values.email}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(\n                                        touched.password && errors.password\n                                    )}\n                                    fullWidth\n                                    helperText={\n                                        touched.password && errors.password\n                                    }\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    name=\"password\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                    value={values.password}\n                                    variant=\"outlined\"\n                                />\n                                <Box\n                                    sx={{\n                                        alignItems: \"center\",\n                                        display: \"flex\",\n                                        ml: -1,\n                                    }}\n                                >\n                                    <Checkbox\n                                        checked={values.policy}\n                                        name=\"policy\"\n                                        onChange={handleChange}\n                                    />\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                    >\n                                        I have read the{\" \"}\n                                        <Link\n                                            color=\"primary\"\n                                            component={RouterLink}\n                                            to=\"#\"\n                                            underline=\"always\"\n                                            variant=\"h6\"\n                                        >\n                                            Terms and Conditions\n                                        </Link>\n                                    </Typography>\n                                </Box>\n                                {Boolean(touched.policy && errors.policy) && (\n                                    <FormHelperText error>\n                                        {errors.policy}\n                                    </FormHelperText>\n                                )}\n                                {signupError && signupError !== \"\" && (\n                                    <Alert severity=\"error\" variant=\"outlined\">\n                                        {signupError}\n                                    </Alert>\n                                )}\n                                <Box sx={{ py: 2 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                    >\n                                        Sign up now\n                                    </Button>\n                                </Box>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    variant=\"body1\"\n                                >\n                                    Have an account?{\" \"}\n                                    <Link\n                                        component={RouterLink}\n                                        to=\"/login\"\n                                        variant=\"h6\"\n                                    >\n                                        Sign in\n                                    </Link>\n                                </Typography>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default Register;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography\n} from '@material-ui/core';\n\nconst SettingsNotifications = (props) => (\n  <form {...props}>\n    <Card>\n      <CardHeader\n        subheader=\"Manage the notifications\"\n        title=\"Notifications\"\n      />\n      <Divider />\n      <CardContent>\n        <Grid\n          container\n          spacing={6}\n          wrap=\"wrap\"\n        >\n          <Grid\n            item\n            md={4}\n            sm={6}\n            sx={{\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n            xs={12}\n          >\n            <Typography\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Notifications\n            </Typography>\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  color=\"primary\"\n                  defaultChecked\n                />\n              )}\n              label=\"Email\"\n            />\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  color=\"primary\"\n                  defaultChecked\n                />\n              )}\n              label=\"Push Notifications\"\n            />\n            <FormControlLabel\n              control={<Checkbox />}\n              label=\"Text Messages\"\n            />\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  color=\"primary\"\n                  defaultChecked\n                />\n              )}\n              label=\"Phone calls\"\n            />\n          </Grid>\n          <Grid\n            item\n            md={4}\n            sm={6}\n            sx={{\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n            xs={12}\n          >\n            <Typography\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Messages\n            </Typography>\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  color=\"primary\"\n                  defaultChecked\n                />\n              )}\n              label=\"Email\"\n            />\n            <FormControlLabel\n              control={<Checkbox />}\n              label=\"Push Notifications\"\n            />\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  color=\"primary\"\n                  defaultChecked\n                />\n              )}\n              label=\"Phone calls\"\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Save\n        </Button>\n      </Box>\n    </Card>\n  </form>\n);\n\nexport default SettingsNotifications;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField\n} from '@material-ui/core';\n\nconst SettingsPassword = (props) => {\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form {...props}>\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default SettingsPassword;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport SettingsNotifications from 'src/components/settings/SettingsNotifications';\nimport SettingsPassword from 'src/components/settings/SettingsPassword';\n\nconst SettingsView = () => (\n  <>\n    <Helmet>\n      <title>Settings | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <SettingsNotifications />\n        <Box sx={{ pt: 3 }}>\n          <SettingsPassword />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default SettingsView;\n","import {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    TextField,\n    InputAdornment,\n    SvgIcon,\n} from \"@material-ui/core\";\nimport { Search as SearchIcon } from \"react-feather\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ProductListToolbar = (props) => {\n    const navigate = useNavigate();\n\n    const handleClick = () => {\n        navigate(\"/app/admin_tutors_create\");\n    };\n\n    return (\n        <Box {...props}>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                }}\n            >\n                <Button>Import</Button>\n                <Button sx={{ mx: 1 }}>Export</Button>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={handleClick}\n                >\n                    Add tutor\n                </Button>\n            </Box>\n            <Box sx={{ mt: 3 }}>\n                <Card>\n                    <CardContent>\n                        <Box sx={{ maxWidth: 500 }}>\n                            <TextField\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <SvgIcon\n                                                fontSize=\"small\"\n                                                color=\"action\"\n                                            >\n                                                <SearchIcon />\n                                            </SvgIcon>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                placeholder=\"Search product\"\n                                variant=\"outlined\"\n                            />\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n        </Box>\n    );\n};\n\nexport default ProductListToolbar;\n","import moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst orders = [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n\nconst LatestOrders = (props) => (\n  <Card {...props}>\n    <CardHeader title=\"Latest Orders\" />\n    <Divider />\n    <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Order Ref\n              </TableCell>\n              <TableCell>\n                Customer\n              </TableCell>\n              <TableCell sortDirection=\"desc\">\n                <Tooltip\n                  enterDelay={300}\n                  title=\"Sort\"\n                >\n                  <TableSortLabel\n                    active\n                    direction=\"desc\"\n                  >\n                    Date\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n              <TableCell>\n                Status\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orders.map((order) => (\n              <TableRow\n                hover\n                key={order.id}\n              >\n                <TableCell>\n                  {order.ref}\n                </TableCell>\n                <TableCell>\n                  {order.customer.name}\n                </TableCell>\n                <TableCell>\n                  {moment(order.createdAt).format('DD/MM/YYYY')}\n                </TableCell>\n                <TableCell>\n                  <Chip\n                    color=\"primary\"\n                    label={order.status}\n                    size=\"small\"\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n  </Card>\n);\n\nexport default LatestOrders;\n","import { Helmet } from \"react-helmet\";\r\nimport { Box, Container, Grid, Pagination } from \"@material-ui/core\";\r\nimport AdminTutorToolbar from \"src/components/admin/tutors/AdminTutorToolbar\";\r\nimport TutorsList from \"src/components/admin/tutors/TutorsList\";\r\n\r\nconst ProductList = () => (\r\n    <>\r\n        <Helmet>\r\n            <title>Tutors | Fidelonline</title>\r\n        </Helmet>\r\n        <Box\r\n            sx={{\r\n                backgroundColor: \"background.default\",\r\n                minHeight: \"100%\",\r\n                py: 3,\r\n            }}\r\n        >\r\n            <Container maxWidth={false}>\r\n                <AdminTutorToolbar />\r\n                <Box sx={{ pt: 3 }}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                            <TutorsList />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                <Box\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        pt: 3,\r\n                    }}\r\n                >\r\n                    <Pagination color=\"primary\" count={3} size=\"small\" />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    </>\r\n);\r\n\r\nexport default ProductList;\r\n","import { useState } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    FormHelperText,\r\n    Link,\r\n    TextField,\r\n    Typography,\r\n    Alert,\r\n} from \"@material-ui/core\";\r\n\r\nconst Register = () => {\r\n    const navigate = useNavigate();\r\n    const [signupError, setSignupError] = useState(\"\");\r\n\r\n    const onClickSignup = (values, setSubmitting) => {\r\n        const data = {\r\n            firstname: values.firstName,\r\n            lastname: values.lastName,\r\n            email: values.email,\r\n            password: values.password,\r\n        };\r\n\r\n        setSignupError(\"\");\r\n        setSubmitting(true);\r\n        axios\r\n            .post(\"http://localhost:3001/tutor/create\", data, {\r\n                headers: {\r\n                    accessToken: localStorage.getItem(\"accessToken\"),\r\n                },\r\n            })\r\n            .then((response) => {\r\n                setSubmitting(false);\r\n                if (response.data.state === \"success\") {\r\n                    console.log({ state: \"success\", result: response });\r\n                    navigate(\"/app/admin_tutors\", { replace: true });\r\n                } else {\r\n                    setSignupError(response.data.message);\r\n                    console.log({ state: \"error\", result: response });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setSubmitting(false);\r\n                setSignupError(error.message);\r\n                console.log({ state: \"error\", result: error });\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Create Tutor | Fidelonline</title>\r\n            </Helmet>\r\n            <Box\r\n                sx={{\r\n                    backgroundColor: \"background.default\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    height: \"100%\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Container maxWidth=\"sm\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: \"\",\r\n                            firstName: \"\",\r\n                            lastName: \"\",\r\n                            password: \"\",\r\n                        }}\r\n                        validationSchema={Yup.object().shape({\r\n                            email: Yup.string()\r\n                                .email(\"Must be a valid email\")\r\n                                .max(50)\r\n                                .required(\"Email is required\"),\r\n                            firstName: Yup.string()\r\n                                .max(25)\r\n                                .required(\"First name is required\"),\r\n                            lastName: Yup.string()\r\n                                .max(25)\r\n                                .required(\"Last name is required\"),\r\n                            password: Yup.string()\r\n                                .max(32)\r\n                                .required(\"password is required\"),\r\n                        })}\r\n                        onSubmit={(values, { setSubmitting }) => {\r\n                            onClickSignup(values, setSubmitting);\r\n                        }}\r\n                    >\r\n                        {({\r\n                            errors,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            handleSubmit,\r\n                            isSubmitting,\r\n                            touched,\r\n                            values,\r\n                        }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <Box sx={{ mb: 3 }}>\r\n                                    <Typography\r\n                                        color=\"textPrimary\"\r\n                                        variant=\"h2\"\r\n                                    >\r\n                                        Add Tutor\r\n                                    </Typography>\r\n                                    <Typography\r\n                                        color=\"textSecondary\"\r\n                                        gutterBottom\r\n                                        variant=\"body2\"\r\n                                    >\r\n                                        Use email to create new tutor account\r\n                                    </Typography>\r\n                                </Box>\r\n                                <TextField\r\n                                    error={Boolean(\r\n                                        touched.firstName && errors.firstName\r\n                                    )}\r\n                                    fullWidth\r\n                                    helperText={\r\n                                        touched.firstName && errors.firstName\r\n                                    }\r\n                                    label=\"First name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"firstName\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    value={values.firstName}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    error={Boolean(\r\n                                        touched.lastName && errors.lastName\r\n                                    )}\r\n                                    fullWidth\r\n                                    helperText={\r\n                                        touched.lastName && errors.lastName\r\n                                    }\r\n                                    label=\"Last name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"lastName\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    value={values.lastName}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    error={Boolean(\r\n                                        touched.email && errors.email\r\n                                    )}\r\n                                    fullWidth\r\n                                    helperText={touched.email && errors.email}\r\n                                    label=\"Email Address\"\r\n                                    margin=\"normal\"\r\n                                    name=\"email\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    type=\"email\"\r\n                                    value={values.email}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    error={Boolean(\r\n                                        touched.password && errors.password\r\n                                    )}\r\n                                    fullWidth\r\n                                    helperText={\r\n                                        touched.password && errors.password\r\n                                    }\r\n                                    label=\"Password\"\r\n                                    margin=\"normal\"\r\n                                    name=\"password\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    type=\"password\"\r\n                                    value={values.password}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                {signupError && signupError !== \"\" && (\r\n                                    <Alert severity=\"error\" variant=\"outlined\">\r\n                                        {signupError}\r\n                                    </Alert>\r\n                                )}\r\n                                <Box sx={{ py: 2 }}>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        disabled={isSubmitting}\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                    >\r\n                                        Create Tutor\r\n                                    </Button>\r\n                                </Box>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    Back to see all{\" \"}\r\n                                    <Link\r\n                                        component={RouterLink}\r\n                                        to=\"/app/admin_tutors\"\r\n                                        variant=\"h6\"\r\n                                    >\r\n                                        Tutors\r\n                                    </Link>\r\n                                </Typography>\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n                </Container>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import { useContext } from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport DashboardLayout from \"src/components/DashboardLayout\";\nimport MainLayout from \"src/components/MainLayout\";\nimport Account from \"src/pages/Account\";\nimport CustomerList from \"src/pages/CustomerList\";\nimport Dashboard from \"src/pages/Dashboard\";\nimport Login from \"src/pages/Login\";\nimport NotFound from \"src/pages/NotFound\";\nimport ProductList from \"src/pages/ProductList\";\nimport Register from \"src/pages/Register\";\nimport Settings from \"src/pages/Settings\";\nimport { AuthContext } from \"src/helpers/AuthContext\";\nimport AdminTutors from \"src/pages/adminPages/TutorsPage\";\nimport AdminAddTutors from \"src/pages/adminPages/AddTutorPage\";\n\nconst PrivateElement = ({ element, requiredRoles }) => {\n    const { authState } = useContext(AuthContext);\n    let location = useLocation();\n    if (!authState) return <p className=\"container\">Checking auth..</p>;\n    const { status, role } = authState;\n\n    return status ? (\n        requiredRoles.includes(role) ? (\n            element\n        ) : (\n            <Navigate to=\"/\" state={{ from: location }} />\n        )\n    ) : (\n        <Navigate to=\"/login\" state={{ from: location }} />\n    );\n};\n\nconst PublicElement = ({ element }) => {\n    const { authState } = useContext(AuthContext);\n    let location = useLocation();\n    if (!authState) return <p className=\"container\">Checking auth..</p>;\n    const { status, role } = authState;\n\n    return status ? <Navigate to=\"/\" state={{ from: location }} /> : element;\n};\n\nconst routes = [\n    {\n        path: \"app\",\n        element: <DashboardLayout />,\n        children: [\n            {\n                path: \"account\",\n                element: (\n                    <PrivateElement\n                        element={<Account />}\n                        requiredRoles={[\"student\", \"tutor\"]}\n                    />\n                ),\n            },\n            {\n                path: \"customers\",\n                element: (\n                    <PrivateElement\n                        element={<CustomerList />}\n                        requiredRoles={[\"admin\"]}\n                    />\n                ),\n            },\n            {\n                path: \"admin_tutors\",\n                element: (\n                    <PrivateElement\n                        element={<AdminTutors />}\n                        requiredRoles={[\"admin\"]}\n                    />\n                ),\n            },\n            {\n                path: \"admin_tutors_create\",\n                element: (\n                    <PrivateElement\n                        element={<AdminAddTutors />}\n                        requiredRoles={[\"admin\"]}\n                    />\n                ),\n            },\n            { path: \"dashboard\", element: <Dashboard /> },\n            { path: \"products\", element: <ProductList /> },\n            { path: \"settings\", element: <Settings /> },\n            { path: \"*\", element: <Navigate to=\"/404\" /> },\n        ],\n    },\n    {\n        path: \"/\",\n        element: <MainLayout />,\n        children: [\n            { path: \"login\", element: <PublicElement element={<Login />} /> },\n            {\n                path: \"register\",\n                element: <PublicElement element={<Register />} />,\n            },\n            { path: \"404\", element: <NotFound /> },\n            { path: \"/\", element: <Navigate to=\"/app/dashboard\" /> },\n            { path: \"*\", element: <Navigate to=\"/404\" /> },\n        ],\n    },\n];\n\nexport default routes;\n","import \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { useRoutes } from \"react-router-dom\";\n\nimport GlobalStyles from \"src/components/GlobalStyles\";\nimport \"src/mixins/chartjs\";\nimport theme from \"src/theme\";\nimport routes from \"src/routes\";\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ThemeProvider, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    top: {\n        color: \"#1a90ff\",\n        animationDuration: \"550ms\",\n        position: \"absolute\",\n    },\n    circle: {\n        strokeLinecap: \"round\",\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n    const routing = useRoutes(routes);\n    const [authState, setAuthState] = useState(null);\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:3001/auth/\", {\n                headers: {\n                    accessToken: localStorage.getItem(\"accessToken\"),\n                },\n            })\n            .then((response) => {\n                if (response.data.state === 'error') {\n                    if (authState) {\n                        setAuthState({\n                            ...authState,\n                            status: false,\n                        });\n                    } else {\n                        setAuthState({\n                            role: null,\n                            email: \"\",\n                            uid: 0,\n                            status: false,\n                        });\n                    }\n                } else {\n                    setAuthState({\n                        role: response.data.role,\n                        email: response.data.email,\n                        uid: response.data.uid,\n                        status: true,\n                    });\n                }\n            });\n    }, []);\n\n    const logout = () => {\n        localStorage.removeItem(\"accessToken\");\n        setAuthState({ role: null, email: \"\", uid: 0, status: false });\n    };\nconsole.log(authState)\n    return (\n        <ThemeProvider theme={theme}>\n            <GlobalStyles />\n            {!authState ? (\n                <div\n                    style={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        height: \"100%\",\n                        flexGrow: 1,\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <CircularProgress\n                        variant=\"indeterminate\"\n                        disableShrink\n                        className={classes.top}\n                        classes={{\n                            circle: classes.circle,\n                        }}\n                        size={40}\n                        thickness={4}\n                    />\n                </div>\n            ) : (\n                <AuthContext.Provider value={{ authState, setAuthState }}>\n                    {routing}\n                </AuthContext.Provider>\n            )}\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}